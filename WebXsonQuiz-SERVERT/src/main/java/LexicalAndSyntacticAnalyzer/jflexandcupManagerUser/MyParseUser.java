
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package LexicalAndSyntacticAnalyzer.jflexandcupManagerUser;

import java_cup.runtime.*;
import java.util.ArrayList;
import LexicalAndSyntacticAnalyzer.analyzer.Token;
import reports.*;
import LexicalAndSyntacticAnalyzer.dataAnalyzer.*;
import LexicalAndSyntacticAnalyzer.dataAnalyzer.RequestAnalyzer;
import LexicalAndSyntacticAnalyzer.ListRequests;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class MyParseUser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return MySymUser.class;
}

  /** Default constructor. */
  @Deprecated
  public MyParseUser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public MyParseUser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public MyParseUser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\166\000\002\002\004\000\002\007\003\000\002\007" +
    "\004\000\002\006\004\000\002\006\003\000\002\005\010" +
    "\000\002\005\003\000\002\005\003\000\002\050\011\000" +
    "\002\051\004\000\002\051\003\000\002\052\007\000\002" +
    "\011\005\000\002\010\005\000\002\010\005\000\002\010" +
    "\005\000\002\010\005\000\002\010\005\000\002\010\005" +
    "\000\002\010\005\000\002\010\005\000\002\010\005\000" +
    "\002\043\005\000\002\043\003\000\002\043\002\000\002" +
    "\044\004\000\002\044\003\000\002\044\002\000\002\045" +
    "\010\000\002\046\004\000\002\036\005\000\002\036\003" +
    "\000\002\036\002\000\002\037\004\000\002\037\003\000" +
    "\002\037\002\000\002\040\010\000\002\041\005\000\002" +
    "\041\003\000\002\042\004\000\002\042\004\000\002\042" +
    "\004\000\002\042\004\000\002\042\004\000\002\042\004" +
    "\000\002\042\004\000\002\042\004\000\002\042\004\000" +
    "\002\031\005\000\002\031\003\000\002\031\002\000\002" +
    "\032\004\000\002\032\003\000\002\032\002\000\002\033" +
    "\010\000\002\034\005\000\002\034\003\000\002\035\004" +
    "\000\002\035\004\000\002\035\004\000\002\035\004\000" +
    "\002\035\004\000\002\035\004\000\002\012\005\000\002" +
    "\012\003\000\002\012\002\000\002\013\004\000\002\013" +
    "\003\000\002\013\002\000\002\014\010\000\002\015\005" +
    "\000\002\015\003\000\002\016\004\000\002\017\005\000" +
    "\002\017\003\000\002\017\002\000\002\020\004\000\002" +
    "\020\003\000\002\020\002\000\002\021\010\000\002\022" +
    "\005\000\002\022\003\000\002\023\004\000\002\023\004" +
    "\000\002\023\004\000\002\023\004\000\002\023\004\000" +
    "\002\024\005\000\002\024\003\000\002\024\002\000\002" +
    "\025\004\000\002\025\003\000\002\025\002\000\002\026" +
    "\010\000\002\027\005\000\002\027\003\000\002\030\004" +
    "\000\002\030\004\000\002\030\004\000\002\030\004\000" +
    "\002\030\004\000\002\030\003\000\002\030\002\000\002" +
    "\047\004\000\002\047\004\000\002\047\004\000\002\047" +
    "\003\000\002\047\002\000\002\002\003\000\002\003\005" +
    "\000\002\003\005\000\002\003\005\000\002\003\005\000" +
    "\002\003\005\000\002\003\003\000\002\003\006\000\002" +
    "\004\003\000\002\004\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\347\000\010\003\004\005\007\031\013\001\002\000" +
    "\006\005\007\031\013\001\002\000\010\002\ufffd\005\ufffd" +
    "\031\ufffd\001\002\000\010\002\ufffb\005\ufffb\031\ufffb\001" +
    "\002\000\004\007\344\001\002\000\010\002\000\005\007" +
    "\031\013\001\002\000\010\002\ufffa\005\ufffa\031\ufffa\001" +
    "\002\000\004\002\342\001\002\000\006\034\015\036\014" +
    "\001\002\000\004\012\332\001\002\000\004\011\016\001" +
    "\002\000\024\040\023\041\020\042\017\053\026\061\025" +
    "\074\022\075\021\076\030\077\024\001\002\000\004\012" +
    "\306\001\002\000\004\012\252\001\002\000\004\012\250" +
    "\001\002\000\004\012\246\001\002\000\004\012\211\001" +
    "\002\000\004\012\207\001\002\000\004\012\143\001\002" +
    "\000\004\012\105\001\002\000\004\013\102\001\002\000" +
    "\004\012\031\001\002\000\010\003\032\013\uffe9\027\033" +
    "\001\002\000\004\013\uffea\001\002\000\010\003\035\030" +
    "\uffe6\054\036\001\002\000\004\013\uffed\001\002\000\004" +
    "\030\uffe7\001\002\000\004\011\041\001\002\000\004\030" +
    "\040\001\002\000\004\013\uffeb\001\002\000\004\025\043" +
    "\001\002\000\004\030\uffe8\001\002\000\004\027\044\001" +
    "\002\000\004\055\046\001\002\000\004\030\077\001\002" +
    "\000\010\003\047\011\050\030\uff96\001\002\000\006\030" +
    "\uff97\035\uff97\001\002\000\012\014\053\021\056\022\052" +
    "\023\055\001\002\000\004\030\uffe4\001\002\000\006\030" +
    "\uff98\035\uff98\001\002\000\006\030\uff9a\035\uff9a\001\002" +
    "\000\006\030\uff99\035\uff99\001\002\000\006\021\056\023" +
    "\055\001\002\000\022\015\uff8f\016\uff8f\017\uff8f\020\uff8f" +
    "\023\070\024\uff8f\030\uff8f\035\uff8f\001\002\000\016\015" +
    "\062\016\063\017\060\020\061\030\uff95\035\uff95\001\002" +
    "\000\006\021\056\023\055\001\002\000\006\021\056\023" +
    "\055\001\002\000\006\021\056\023\055\001\002\000\006" +
    "\021\056\023\055\001\002\000\020\015\uff93\016\uff93\017" +
    "\060\020\061\024\uff93\030\uff93\035\uff93\001\002\000\020" +
    "\015\uff94\016\uff94\017\060\020\061\024\uff94\030\uff94\035" +
    "\uff94\001\002\000\020\015\uff91\016\uff91\017\uff91\020\uff91" +
    "\024\uff91\030\uff91\035\uff91\001\002\000\020\015\uff92\016" +
    "\uff92\017\uff92\020\uff92\024\uff92\030\uff92\035\uff92\001\002" +
    "\000\006\021\056\023\055\001\002\000\014\015\062\016" +
    "\063\017\060\020\061\024\072\001\002\000\020\015\uff8e" +
    "\016\uff8e\017\uff8e\020\uff8e\024\uff8e\030\uff8e\035\uff8e\001" +
    "\002\000\014\015\062\016\063\017\060\020\061\024\074" +
    "\001\002\000\024\015\uff8d\016\uff8d\017\uff8d\020\uff8d\021" +
    "\056\023\055\024\uff8d\030\uff8d\035\uff8d\001\002\000\020" +
    "\015\uff90\016\uff90\017\uff90\020\uff90\024\uff90\030\uff90\035" +
    "\uff90\001\002\000\020\015\uff8c\016\uff8c\017\uff8c\020\uff8c" +
    "\024\uff8c\030\uff8c\035\uff8c\001\002\000\004\026\100\001" +
    "\002\000\004\030\uffe5\001\002\000\010\002\ufff6\005\ufff6" +
    "\031\ufff6\001\002\000\004\032\103\001\002\000\004\033" +
    "\104\001\002\000\010\002\ufff5\005\ufff5\031\ufff5\001\002" +
    "\000\010\003\106\013\uffcf\027\107\001\002\000\004\013" +
    "\uffd0\001\002\000\010\003\112\030\uffcc\054\113\001\002" +
    "\000\004\013\ufff1\001\002\000\004\030\142\001\002\000" +
    "\004\030\uffcd\001\002\000\004\011\115\001\002\000\004" +
    "\030\uffce\001\002\000\004\025\116\001\002\000\004\027" +
    "\117\001\002\000\016\050\126\052\122\055\127\056\121" +
    "\057\120\060\124\001\002\000\012\003\047\011\050\030" +
    "\uff96\035\uff96\001\002\000\012\003\047\011\050\030\uff96" +
    "\035\uff96\001\002\000\012\003\047\011\050\030\uff96\035" +
    "\uff96\001\002\000\006\030\134\035\133\001\002\000\012" +
    "\003\047\011\050\030\uff96\035\uff96\001\002\000\006\030" +
    "\uffc9\035\uffc9\001\002\000\012\003\047\011\050\030\uff96" +
    "\035\uff96\001\002\000\012\003\047\011\050\030\uff96\035" +
    "\uff96\001\002\000\006\030\uffc8\035\uffc8\001\002\000\006" +
    "\030\uffc6\035\uffc6\001\002\000\006\030\uffc4\035\uffc4\001" +
    "\002\000\016\050\126\052\122\055\127\056\121\057\120" +
    "\060\124\001\002\000\004\026\135\001\002\000\004\030" +
    "\uffcb\001\002\000\006\030\uffca\035\uffca\001\002\000\006" +
    "\030\uffc3\035\uffc3\001\002\000\006\030\uffc7\035\uffc7\001" +
    "\002\000\006\030\uffc5\035\uffc5\001\002\000\004\013\uffd1" +
    "\001\002\000\010\003\144\013\uffe1\027\146\001\002\000" +
    "\004\013\uffe2\001\002\000\004\013\ufff0\001\002\000\010" +
    "\003\150\030\uffde\062\147\001\002\000\004\011\154\001" +
    "\002\000\004\030\uffdf\001\002\000\004\030\152\001\002" +
    "\000\004\013\uffe3\001\002\000\004\030\uffe0\001\002\000" +
    "\004\025\155\001\002\000\004\027\156\001\002\000\024" +
    "\063\170\064\157\065\166\066\165\067\162\070\164\071" +
    "\161\072\163\073\160\001\002\000\012\003\047\011\050" +
    "\030\uff96\035\uff96\001\002\000\012\003\047\011\050\030" +
    "\uff96\035\uff96\001\002\000\012\003\047\011\050\030\uff96" +
    "\035\uff96\001\002\000\012\003\047\011\050\030\uff96\035" +
    "\uff96\001\002\000\012\003\047\011\050\030\uff96\035\uff96" +
    "\001\002\000\012\003\047\011\050\030\uff96\035\uff96\001" +
    "\002\000\012\003\047\011\050\030\uff96\035\uff96\001\002" +
    "\000\012\003\047\011\050\030\uff96\035\uff96\001\002\000" +
    "\006\030\uffdb\035\uffdb\001\002\000\012\003\047\011\050" +
    "\030\uff96\035\uff96\001\002\000\006\030\173\035\172\001" +
    "\002\000\024\063\170\064\157\065\166\066\165\067\162" +
    "\070\164\071\161\072\163\073\160\001\002\000\004\026" +
    "\174\001\002\000\004\030\uffdd\001\002\000\006\030\uffdc" +
    "\035\uffdc\001\002\000\006\030\uffda\035\uffda\001\002\000" +
    "\006\030\uffd8\035\uffd8\001\002\000\006\030\uffd7\035\uffd7" +
    "\001\002\000\006\030\uffd5\035\uffd5\001\002\000\006\030" +
    "\uffd2\035\uffd2\001\002\000\006\030\uffd6\035\uffd6\001\002" +
    "\000\006\030\uffd4\035\uffd4\001\002\000\006\030\uffd3\035" +
    "\uffd3\001\002\000\006\030\uffd9\035\uffd9\001\002\000\010" +
    "\003\144\013\uffe1\027\146\001\002\000\004\013\uffec\001" +
    "\002\000\010\003\212\013\uffa8\027\214\001\002\000\004" +
    "\013\uffa9\001\002\000\004\013\ufff4\001\002\000\010\003" +
    "\216\030\uffa5\045\215\001\002\000\004\011\221\001\002" +
    "\000\004\030\uffa6\001\002\000\004\030\220\001\002\000" +
    "\004\013\uffaa\001\002\000\004\025\223\001\002\000\004" +
    "\030\uffa7\001\002\000\004\027\224\001\002\000\022\003" +
    "\227\030\uff9b\035\uff9b\046\234\047\226\050\233\051\232" +
    "\052\231\001\002\000\006\030\243\035\242\001\002\000" +
    "\012\003\047\011\050\030\uff96\035\uff96\001\002\000\006" +
    "\030\uff9c\035\uff9c\001\002\000\006\030\uffa2\035\uffa2\001" +
    "\002\000\012\003\047\011\050\030\uff96\035\uff96\001\002" +
    "\000\012\003\047\011\050\030\uff96\035\uff96\001\002\000" +
    "\012\003\047\011\050\030\uff96\035\uff96\001\002\000\012" +
    "\003\047\011\050\030\uff96\035\uff96\001\002\000\006\030" +
    "\uffa1\035\uffa1\001\002\000\006\030\uff9f\035\uff9f\001\002" +
    "\000\006\030\uff9e\035\uff9e\001\002\000\006\030\uff9d\035" +
    "\uff9d\001\002\000\006\030\uffa0\035\uffa0\001\002\000\022" +
    "\003\227\030\uff9b\035\uff9b\046\234\047\226\050\233\051" +
    "\232\052\231\001\002\000\004\026\244\001\002\000\004" +
    "\030\uffa4\001\002\000\006\030\uffa3\035\uffa3\001\002\000" +
    "\010\003\106\013\uffcf\027\107\001\002\000\004\013\uffef" +
    "\001\002\000\010\003\144\013\uffe1\027\146\001\002\000" +
    "\004\013\uffee\001\002\000\010\003\253\013\uffb6\027\254" +
    "\001\002\000\004\013\uffb7\001\002\000\010\003\260\030" +
    "\uffb3\045\257\001\002\000\004\013\ufff3\001\002\000\004" +
    "\030\305\001\002\000\004\011\261\001\002\000\004\030" +
    "\uffb4\001\002\000\004\025\263\001\002\000\004\030\uffb5" +
    "\001\002\000\004\027\264\001\002\000\014\040\272\043" +
    "\265\044\267\051\273\052\271\001\002\000\012\003\047" +
    "\011\050\030\uff96\035\uff96\001\002\000\006\030\uffb0\035" +
    "\uffb0\001\002\000\012\003\047\011\050\030\uff96\035\uff96" +
    "\001\002\000\006\030\300\035\277\001\002\000\012\003" +
    "\047\011\050\030\uff96\035\uff96\001\002\000\012\003\047" +
    "\011\050\030\uff96\035\uff96\001\002\000\012\003\047\011" +
    "\050\030\uff96\035\uff96\001\002\000\006\030\uffac\035\uffac" +
    "\001\002\000\006\030\uffae\035\uffae\001\002\000\006\030" +
    "\uffab\035\uffab\001\002\000\014\040\272\043\265\044\267" +
    "\051\273\052\271\001\002\000\004\026\301\001\002\000" +
    "\004\030\uffb2\001\002\000\006\030\uffb1\035\uffb1\001\002" +
    "\000\006\030\uffad\035\uffad\001\002\000\006\030\uffaf\035" +
    "\uffaf\001\002\000\004\013\uffb8\001\002\000\010\003\307" +
    "\013\uffc0\027\311\001\002\000\004\013\uffc1\001\002\000" +
    "\004\013\ufff2\001\002\000\010\003\314\030\uffbd\045\313" +
    "\001\002\000\004\030\331\001\002\000\004\011\315\001" +
    "\002\000\004\030\uffbe\001\002\000\004\025\317\001\002" +
    "\000\004\030\uffbf\001\002\000\004\027\320\001\002\000" +
    "\004\046\323\001\002\000\006\030\326\035\325\001\002" +
    "\000\006\030\uffba\035\uffba\001\002\000\012\003\047\011" +
    "\050\030\uff96\035\uff96\001\002\000\006\030\uffb9\035\uffb9" +
    "\001\002\000\004\046\323\001\002\000\004\026\327\001" +
    "\002\000\004\030\uffbc\001\002\000\006\030\uffbb\035\uffbb" +
    "\001\002\000\004\013\uffc2\001\002\000\004\031\335\001" +
    "\002\000\004\031\ufff7\001\002\000\004\031\337\001\002" +
    "\000\004\034\015\001\002\000\004\031\ufff8\001\002\000" +
    "\006\034\015\037\340\001\002\000\004\012\341\001\002" +
    "\000\010\002\ufff9\005\ufff9\031\ufff9\001\002\000\004\002" +
    "\001\001\002\000\010\002\ufffe\005\ufffe\031\ufffe\001\002" +
    "\000\004\010\345\001\002\000\004\004\346\001\002\000" +
    "\004\014\347\001\002\000\004\006\350\001\002\000\010" +
    "\002\ufffc\005\ufffc\031\ufffc\001\002\000\010\002\uffff\005" +
    "\007\031\013\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\347\000\014\005\004\006\007\007\011\050\010\052" +
    "\005\001\001\000\012\005\004\006\350\050\010\052\005" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\005\342\050\010\052\005\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\026\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\100\001\001\000\002\001" +
    "\001\000\004\043\033\001\001\000\002\001\001\000\004" +
    "\044\036\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\045\041\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\046\044\001\001\000\002\001\001\000\004\047\050" +
    "\001\001\000\002\001\001\000\006\002\053\003\056\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\003\072\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\066\001\001\000\004" +
    "\003\065\001\001\000\004\003\064\001\001\000\004\003" +
    "\063\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\070\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\074\001\001" +
    "\000\004\003\075\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\107\001\001\000\002\001\001\000\004\032\110" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\033\113\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\034\122\035\124\001" +
    "\001\000\004\047\140\001\001\000\004\047\137\001\001" +
    "\000\004\047\136\001\001\000\002\001\001\000\004\047" +
    "\131\001\001\000\002\001\001\000\004\047\130\001\001" +
    "\000\004\047\127\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\035\135\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\036\144\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\037\150\001\001\000\004\040\152\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\041\170\042\166\001\001\000\004\047\205\001\001\000" +
    "\004\047\204\001\001\000\004\047\203\001\001\000\004" +
    "\047\202\001\001\000\004\047\201\001\001\000\004\047" +
    "\200\001\001\000\004\047\177\001\001\000\004\047\176" +
    "\001\001\000\002\001\001\000\004\047\175\001\001\000" +
    "\002\001\001\000\004\042\174\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\036\207\001\001\000\002" +
    "\001\001\000\004\024\212\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\216\001\001\000\004\026\221" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\027\224\030\227\001\001\000\002\001\001\000" +
    "\004\047\240\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\047\237\001\001\000\004\047\236\001\001\000" +
    "\004\047\235\001\001\000\004\047\234\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\030\244\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\031" +
    "\246\001\001\000\002\001\001\000\004\036\250\001\001" +
    "\000\002\001\001\000\004\017\254\001\001\000\002\001" +
    "\001\000\004\020\255\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\021\261\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\022\267\023\265\001\001\000\004\047\303\001\001\000" +
    "\002\001\001\000\004\047\302\001\001\000\002\001\001" +
    "\000\004\047\275\001\001\000\004\047\274\001\001\000" +
    "\004\047\273\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\023\301\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\012\307\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\311" +
    "\001\001\000\002\001\001\000\004\014\315\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\015\320\016\321\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\047\323\001\001\000\002" +
    "\001\001\000\004\016\327\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\051\333\052\332\001\001\000\002\001\001\000\004\052" +
    "\335\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\005\342\050\010\052\005\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MyParseUser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MyParseUser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MyParseUser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




private ArrayList<ReportErrorInterpreter> listError = new ArrayList();
private ArrayList<DataAnalyzer> dataStack = new ArrayList();
private ArrayList<RequestAnalyzer> listRquest = new ArrayList();


	  public MyParseUser(LexemaByMyParesUser lexer) {
        super(lexer);
    }

    //erorr
    public void syntax_error(Symbol cur_token) {
        String nameTerminal = symbl_name_from_id(this.cur_token.sym);
        int numberTerminal = this.cur_token.sym;
        ///codigo para el objeto
        TypeIntreprete type = TypeIntreprete.SYNTACTIC;
        int line = cur_token.left+1;
        int columna = cur_token.right +1;
        String lexema = this.cur_token.value.toString();
        Token token = new Token(line, columna, lexema);
        System.out.println(token.toString());
        this.listError.add(new ReportErrorInterpreter(type, token, ReportingConstants.ERROR_SICTATICO));
    }

    //Returnar el listado de errores
    public ArrayList<ReportErrorInterpreter> getListError() {
        return this.listError;
    }

    //Returnar el listado de Rquest
    public ArrayList<RequestAnalyzer> getListRquest(){
      return this.listRquest;
    }

    /**
     * ***END CODE*******
     */


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$MyParseUser$actions {
  private final MyParseUser parser;

  /** Constructor */
  CUP$MyParseUser$actions(MyParseUser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$MyParseUser$do_action_part00000000(
    int                        CUP$MyParseUser$act_num,
    java_cup.runtime.lr_parser CUP$MyParseUser$parser,
    java.util.Stack            CUP$MyParseUser$stack,
    int                        CUP$MyParseUser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MyParseUser$result;

      /* select the action based on the action number */
      switch (CUP$MyParseUser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		RESULT = start_val;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$MyParseUser$parser.done_parsing();
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= bucle_inicio 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio",5, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= error bucle_inicio 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio",5, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // bucle_inicio ::= bucle_inicio inicio_xson 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("bucle_inicio",4, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // bucle_inicio ::= inicio_xson 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("bucle_inicio",4, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // inicio_xson ::= OPEN_VERSION XSON VERSION EQUAL STRING CLOSE_VERSION 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // inicio_xson ::= solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // inicio_xson ::= solicitudes 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // solicitudes ::= OPEN_REQUEST MAKE_REQUESTS CLOSE varios_solicitud OPEN_REQUEST FINAL_REQUESTS CLOSE 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitudes",38, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-6)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // varios_solicitud ::= varios_solicitud solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("varios_solicitud",39, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // varios_solicitud ::= solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("varios_solicitud",39, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // solicitud_unit ::= OPEN_REQUEST MAKE_REQUEST COLNO solicitud cerrar_solicitud 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_unit",40, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-4)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // cerrar_solicitud ::= OPEN FINAL_REQUEST CLOSE_REQUEST 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("cerrar_solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // solicitud ::= NEW_USER CLOSE json_new_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.NEW_USER));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // solicitud ::= MODIFICAR_USUARIO CLOSE json_modificar_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.MODIFICAR_USUARIO));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // solicitud ::= ELIMINAR_USUARIO CLOSE json_del_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.ELIMINAR_USUARIO));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // solicitud ::= NEW_TRIVIA CLOSE json_new_trivia 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.NEW_TRIVIA));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // solicitud ::= AGREGAR_COMPONENTE CLOSE json_add_component 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.AGREGAR_COMPONENTE));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // solicitud ::= MODIFICAR_TRIVIA CLOSE json_new_trivia 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.MODIFICAR_TRIVIA));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // solicitud ::= ELIMINAR_COMPONENTE CLOSE json_add_component 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.ELIMINAR_COMPONENTE));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // solicitud ::= ELIMINAR_TRIVIA CLOSE json_del_trivia 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.ELIMINAR_TRIVIA));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // solicitud ::= MODIFICAR_COMPONENTE CLOSE json_add_component 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.ELIMINAR_TRIVIA));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // json_del_trivia ::= KEYS_O obj_json_del_trivia KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_trivia",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // json_del_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_trivia",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // json_del_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_trivia",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // obj_json_del_trivia ::= PARAMETROS_TRIVIA solicitud_del_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_trivia",34, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // obj_json_del_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_trivia",34, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // obj_json_del_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_trivia",34, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // solicitud_del_trivia ::= COLNO BRACKETS_O KEYS_O datas_del_trivia KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_del_trivia",35, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // datas_del_trivia ::= ID_TRIVIA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.ID_TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_del_trivia",36, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // json_add_component ::= KEYS_O obj_json_add_component KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // json_add_component ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // json_add_component ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // obj_json_add_component ::= PARAMETROS_COMPONENTE solicitud_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // obj_json_add_component ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // obj_json_add_component ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // solicitud_add_component ::= COLNO BRACKETS_O KEYS_O datas_add_component KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_add_component",30, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // datas_add_component ::= datas_add_component COMA data_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_add_component",31, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // datas_add_component ::= data_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_add_component",31, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // data_add_component ::= ID data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.ID_TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // data_add_component ::= TRIVIA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // data_add_component ::= CLASE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.CLASE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // data_add_component ::= TEXTO_VISIBLE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TEXTO_VISIBLE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // data_add_component ::= RESPUESTA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.RESPUESTA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // data_add_component ::= INDICE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INDICE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // data_add_component ::= OPCIONES data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.OPCIONES,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // data_add_component ::= FILAS data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.FILAS,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // data_add_component ::= COLUMNAS data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.COLUMNAS,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // json_new_trivia ::= KEYS_O obj_json_new_trivia KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // json_new_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // json_new_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // obj_json_new_trivia ::= PARAMETROS_TRIVIA solicitud_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // obj_json_new_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // obj_json_new_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // solicitud_new_trivia ::= COLNO BRACKETS_O KEYS_O datas_new_trivia KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_new_trivia",25, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // datas_new_trivia ::= datas_new_trivia COMA data_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_trivia",26, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // datas_new_trivia ::= data_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_trivia",26, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // data_new_trivia ::= ID_TRIVIA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.ID_TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // data_new_trivia ::= TIEMPO_PREGUNTA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TIEMPO_PREGUNTA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // data_new_trivia ::= NAME_PERSONAL_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NAME,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // data_new_trivia ::= TEMA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TEMA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // data_new_trivia ::= USUARIO_CREACION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO_CREACION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // data_new_trivia ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // json_del_user ::= KEYS_O obj_json_del_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",8, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // json_del_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",8, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // json_del_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",8, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // obj_json_del_user ::= USER_DATA solicitud_usuario_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // obj_json_del_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // obj_json_del_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // solicitud_usuario_del_user ::= COLNO BRACKETS_O KEYS_O datas_del_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_del_user",10, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // datas_del_user ::= datas_del_user COMA data_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_del_user",11, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // datas_del_user ::= data_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_del_user",11, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // data_del_user ::= NAME_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_del_user",12, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // json_modificar_user ::= KEYS_O obj_json_modificar_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",13, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // json_modificar_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",13, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // json_modificar_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",13, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // obj_json_modificar_user ::= USER_DATA solicitud_usuario_modificar_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // obj_json_modificar_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // obj_json_modificar_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // solicitud_usuario_modificar_user ::= COLNO BRACKETS_O KEYS_O datas_user_modificar_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_modificar_user",15, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // datas_user_modificar_user ::= datas_user_modificar_user COMA datas_user_modificar 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar_user",16, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // datas_user_modificar_user ::= datas_user_modificar 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar_user",16, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // datas_user_modificar ::= USUARIO_ANTIGUO data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO_ANTIGUO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // datas_user_modificar ::= NEW_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // datas_user_modificar ::= NUEVO_PASSWORD data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NUEVO_PASSWORD,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // datas_user_modificar ::= INSTITUCION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INSTITUTION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // datas_user_modificar ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // json_new_user ::= KEYS_O obj_json_new_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // json_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // json_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // obj_json_new_user ::= USER_DATA solicitud_usuario_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // obj_json_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // obj_json_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // solicitud_usuario_new_user ::= COLNO BRACKETS_O KEYS_O datas_new_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_new_user",20, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // datas_new_user ::= datas_new_user COMA data_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_user",21, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // datas_new_user ::= data_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_user",21, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // data_new_user ::= NAME_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // data_new_user ::= PASS_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.PASSWORD,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // data_new_user ::= NAME_PERSONAL_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NAME,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // data_new_user ::= INSTITUCION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INSTITUTION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // data_new_user ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // data_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // data_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // data ::= COLNO STRING 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",37, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // data ::= COLNO inico_opereacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",37, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // data ::= COLNO STRING_DATE 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",37, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // data ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",37, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // data ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",37, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // inico_opereacion ::= operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    //////////////////////////////////////////
		Double aDouble = 0.0;
    if (a!=null) {
        aDouble =   Double.valueOf(a.toString());
        RESULT = aDouble;
    }else{
      RESULT = aDouble;
    }
    //////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inico_opereacion",0, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // operacion ::= operacion SUMAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double resultDouble = aDouble + bDouble;
      RESULT = resultDouble;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // operacion ::= operacion RESTAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double resultDouble = aDouble - bDouble;
      RESULT = resultDouble;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // operacion ::= operacion DIVIDIR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      if (bDouble>0) {
        Double result = ( bDouble/ bDouble);
        RESULT = result;
      }else{
        /// manejar un error de sintasis
        RESULT = aDouble;// si es 15/0
      }
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // operacion ::= operacion MULTIPLICAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // operacion ::= PARENTESIS_A operacion parente 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = a;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // operacion ::= REAL_NUMEBERS 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // operacion ::= REAL_NUMEBERS PARENTESIS_A operacion PARENTESIS_C 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = a;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // parente ::= PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("parente",2, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // parente ::= PARENTESIS_C operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("parente",2, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MyParseUser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$MyParseUser$do_action(
    int                        CUP$MyParseUser$act_num,
    java_cup.runtime.lr_parser CUP$MyParseUser$parser,
    java.util.Stack            CUP$MyParseUser$stack,
    int                        CUP$MyParseUser$top)
    throws java.lang.Exception
    {
              return CUP$MyParseUser$do_action_part00000000(
                               CUP$MyParseUser$act_num,
                               CUP$MyParseUser$parser,
                               CUP$MyParseUser$stack,
                               CUP$MyParseUser$top);
    }
}

}
