
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package LexicalAndSyntacticAnalyzer.jflexandcupManagerUser;

import java_cup.runtime.*;
import java.util.ArrayList;
import LexicalAndSyntacticAnalyzer.analyzer.Token;
import reports.*;
import LexicalAndSyntacticAnalyzer.dataAnalyzer.*;
import LexicalAndSyntacticAnalyzer.dataAnalyzer.RequestAnalyzer;
import LexicalAndSyntacticAnalyzer.ListRequests;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class MyParseUser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return MySymUser.class;
}

  /** Default constructor. */
  @Deprecated
  public MyParseUser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public MyParseUser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public MyParseUser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\152\000\002\002\004\000\002\007\003\000\002\007" +
    "\004\000\002\006\004\000\002\006\003\000\002\005\010" +
    "\000\002\005\003\000\002\005\003\000\002\044\011\000" +
    "\002\045\004\000\002\045\003\000\002\046\007\000\002" +
    "\011\005\000\002\010\005\000\002\010\005\000\002\010" +
    "\005\000\002\010\005\000\002\010\005\000\002\036\005" +
    "\000\002\036\003\000\002\036\002\000\002\037\004\000" +
    "\002\037\003\000\002\037\002\000\002\040\010\000\002" +
    "\041\005\000\002\041\003\000\002\042\004\000\002\042" +
    "\004\000\002\042\004\000\002\042\004\000\002\042\004" +
    "\000\002\042\004\000\002\042\004\000\002\042\004\000" +
    "\002\042\004\000\002\031\005\000\002\031\003\000\002" +
    "\031\002\000\002\032\004\000\002\032\003\000\002\032" +
    "\002\000\002\033\010\000\002\034\005\000\002\034\003" +
    "\000\002\035\004\000\002\035\004\000\002\035\004\000" +
    "\002\035\004\000\002\035\004\000\002\035\004\000\002" +
    "\012\005\000\002\012\003\000\002\012\002\000\002\013" +
    "\004\000\002\013\003\000\002\013\002\000\002\014\010" +
    "\000\002\015\005\000\002\015\003\000\002\016\004\000" +
    "\002\017\005\000\002\017\003\000\002\017\002\000\002" +
    "\020\004\000\002\020\003\000\002\020\002\000\002\021" +
    "\010\000\002\022\005\000\002\022\003\000\002\023\004" +
    "\000\002\023\004\000\002\023\004\000\002\023\004\000" +
    "\002\023\004\000\002\024\005\000\002\024\003\000\002" +
    "\024\002\000\002\025\004\000\002\025\003\000\002\025" +
    "\002\000\002\026\010\000\002\027\005\000\002\027\003" +
    "\000\002\030\004\000\002\030\004\000\002\030\004\000" +
    "\002\030\004\000\002\030\004\000\002\030\003\000\002" +
    "\030\002\000\002\043\004\000\002\043\004\000\002\043" +
    "\004\000\002\043\003\000\002\043\002\000\002\002\003" +
    "\000\002\003\005\000\002\003\005\000\002\003\005\000" +
    "\002\003\005\000\002\003\005\000\002\003\003\000\002" +
    "\003\006\000\002\004\003\000\002\004\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\314\000\010\003\004\005\007\031\013\001\002\000" +
    "\006\005\007\031\013\001\002\000\010\002\ufffd\005\ufffd" +
    "\031\ufffd\001\002\000\010\002\ufffb\005\ufffb\031\ufffb\001" +
    "\002\000\004\007\311\001\002\000\010\002\000\005\007" +
    "\031\013\001\002\000\010\002\ufffa\005\ufffa\031\ufffa\001" +
    "\002\000\004\002\307\001\002\000\006\034\015\036\014" +
    "\001\002\000\004\012\277\001\002\000\004\011\016\001" +
    "\002\000\014\040\023\041\017\042\021\053\020\061\024" +
    "\001\002\000\004\012\243\001\002\000\004\012\205\001" +
    "\002\000\004\012\161\001\002\000\004\013\156\001\002" +
    "\000\004\012\120\001\002\000\004\012\025\001\002\000" +
    "\010\003\026\013\uffed\027\030\001\002\000\004\013\uffee" +
    "\001\002\000\004\013\ufff0\001\002\000\010\003\031\030" +
    "\uffea\062\032\001\002\000\004\030\uffeb\001\002\000\004" +
    "\011\036\001\002\000\004\030\034\001\002\000\004\013" +
    "\uffef\001\002\000\004\030\uffec\001\002\000\004\025\037" +
    "\001\002\000\004\027\040\001\002\000\024\063\052\064" +
    "\041\065\050\066\047\067\044\070\046\071\043\072\045" +
    "\073\042\001\002\000\012\003\060\011\061\030\uffa2\035" +
    "\uffa2\001\002\000\012\003\060\011\061\030\uffa2\035\uffa2" +
    "\001\002\000\012\003\060\011\061\030\uffa2\035\uffa2\001" +
    "\002\000\012\003\060\011\061\030\uffa2\035\uffa2\001\002" +
    "\000\012\003\060\011\061\030\uffa2\035\uffa2\001\002\000" +
    "\012\003\060\011\061\030\uffa2\035\uffa2\001\002\000\012" +
    "\003\060\011\061\030\uffa2\035\uffa2\001\002\000\012\003" +
    "\060\011\061\030\uffa2\035\uffa2\001\002\000\006\030\uffe7" +
    "\035\uffe7\001\002\000\012\003\060\011\061\030\uffa2\035" +
    "\uffa2\001\002\000\006\030\055\035\054\001\002\000\024" +
    "\063\052\064\041\065\050\066\047\067\044\070\046\071" +
    "\043\072\045\073\042\001\002\000\004\026\056\001\002" +
    "\000\004\030\uffe9\001\002\000\006\030\uffe8\035\uffe8\001" +
    "\002\000\006\030\uffa3\035\uffa3\001\002\000\012\014\064" +
    "\021\067\022\063\023\066\001\002\000\006\030\uffe6\035" +
    "\uffe6\001\002\000\006\030\uffa4\035\uffa4\001\002\000\006" +
    "\030\uffa6\035\uffa6\001\002\000\006\030\uffa5\035\uffa5\001" +
    "\002\000\006\021\067\023\066\001\002\000\022\015\uff9b" +
    "\016\uff9b\017\uff9b\020\uff9b\023\101\024\uff9b\030\uff9b\035" +
    "\uff9b\001\002\000\016\015\073\016\074\017\071\020\072" +
    "\030\uffa1\035\uffa1\001\002\000\006\021\067\023\066\001" +
    "\002\000\006\021\067\023\066\001\002\000\006\021\067" +
    "\023\066\001\002\000\006\021\067\023\066\001\002\000" +
    "\020\015\uff9f\016\uff9f\017\071\020\072\024\uff9f\030\uff9f" +
    "\035\uff9f\001\002\000\020\015\uffa0\016\uffa0\017\071\020" +
    "\072\024\uffa0\030\uffa0\035\uffa0\001\002\000\020\015\uff9d" +
    "\016\uff9d\017\uff9d\020\uff9d\024\uff9d\030\uff9d\035\uff9d\001" +
    "\002\000\020\015\uff9e\016\uff9e\017\uff9e\020\uff9e\024\uff9e" +
    "\030\uff9e\035\uff9e\001\002\000\006\021\067\023\066\001" +
    "\002\000\014\015\073\016\074\017\071\020\072\024\103" +
    "\001\002\000\020\015\uff9a\016\uff9a\017\uff9a\020\uff9a\024" +
    "\uff9a\030\uff9a\035\uff9a\001\002\000\014\015\073\016\074" +
    "\017\071\020\072\024\105\001\002\000\024\015\uff99\016" +
    "\uff99\017\uff99\020\uff99\021\067\023\066\024\uff99\030\uff99" +
    "\035\uff99\001\002\000\020\015\uff9c\016\uff9c\017\uff9c\020" +
    "\uff9c\024\uff9c\030\uff9c\035\uff9c\001\002\000\020\015\uff98" +
    "\016\uff98\017\uff98\020\uff98\024\uff98\030\uff98\035\uff98\001" +
    "\002\000\006\030\uffe4\035\uffe4\001\002\000\006\030\uffe3" +
    "\035\uffe3\001\002\000\006\030\uffe1\035\uffe1\001\002\000" +
    "\006\030\uffde\035\uffde\001\002\000\006\030\uffe2\035\uffe2" +
    "\001\002\000\006\030\uffe0\035\uffe0\001\002\000\006\030" +
    "\uffdf\035\uffdf\001\002\000\006\030\uffe5\035\uffe5\001\002" +
    "\000\010\003\121\013\uffb4\027\123\001\002\000\004\013" +
    "\uffb5\001\002\000\004\013\ufff4\001\002\000\010\003\125" +
    "\030\uffb1\045\124\001\002\000\004\011\130\001\002\000" +
    "\004\030\uffb2\001\002\000\004\030\127\001\002\000\004" +
    "\013\uffb6\001\002\000\004\025\132\001\002\000\004\030" +
    "\uffb3\001\002\000\004\027\133\001\002\000\022\003\136" +
    "\030\uffa7\035\uffa7\046\142\047\135\050\143\051\141\052" +
    "\140\001\002\000\006\030\152\035\151\001\002\000\012" +
    "\003\060\011\061\030\uffa2\035\uffa2\001\002\000\006\030" +
    "\uffa8\035\uffa8\001\002\000\006\030\uffae\035\uffae\001\002" +
    "\000\012\003\060\011\061\030\uffa2\035\uffa2\001\002\000" +
    "\012\003\060\011\061\030\uffa2\035\uffa2\001\002\000\012" +
    "\003\060\011\061\030\uffa2\035\uffa2\001\002\000\012\003" +
    "\060\011\061\030\uffa2\035\uffa2\001\002\000\006\030\uffab" +
    "\035\uffab\001\002\000\006\030\uffad\035\uffad\001\002\000" +
    "\006\030\uffaa\035\uffaa\001\002\000\006\030\uffa9\035\uffa9" +
    "\001\002\000\006\030\uffac\035\uffac\001\002\000\022\003" +
    "\136\030\uffa7\035\uffa7\046\142\047\135\050\143\051\141" +
    "\052\140\001\002\000\004\026\153\001\002\000\004\030" +
    "\uffb0\001\002\000\006\030\uffaf\035\uffaf\001\002\000\010" +
    "\002\ufff6\005\ufff6\031\ufff6\001\002\000\004\032\157\001" +
    "\002\000\004\033\160\001\002\000\010\002\ufff5\005\ufff5" +
    "\031\ufff5\001\002\000\010\003\162\013\uffcc\027\163\001" +
    "\002\000\004\013\uffcd\001\002\000\010\003\167\030\uffc9" +
    "\045\166\001\002\000\004\013\ufff2\001\002\000\004\030" +
    "\204\001\002\000\004\011\170\001\002\000\004\030\uffca" +
    "\001\002\000\004\025\172\001\002\000\004\030\uffcb\001" +
    "\002\000\004\027\173\001\002\000\004\046\176\001\002" +
    "\000\006\030\201\035\200\001\002\000\006\030\uffc6\035" +
    "\uffc6\001\002\000\012\003\060\011\061\030\uffa2\035\uffa2" +
    "\001\002\000\006\030\uffc5\035\uffc5\001\002\000\004\046" +
    "\176\001\002\000\004\026\202\001\002\000\004\030\uffc8" +
    "\001\002\000\006\030\uffc7\035\uffc7\001\002\000\004\013" +
    "\uffce\001\002\000\010\003\206\013\uffdb\027\207\001\002" +
    "\000\004\013\uffdc\001\002\000\010\003\212\030\uffd8\054" +
    "\213\001\002\000\004\013\ufff1\001\002\000\004\030\242" +
    "\001\002\000\004\030\uffd9\001\002\000\004\011\215\001" +
    "\002\000\004\030\uffda\001\002\000\004\025\216\001\002" +
    "\000\004\027\217\001\002\000\016\050\226\052\222\055" +
    "\227\056\221\057\220\060\224\001\002\000\012\003\060" +
    "\011\061\030\uffa2\035\uffa2\001\002\000\012\003\060\011" +
    "\061\030\uffa2\035\uffa2\001\002\000\012\003\060\011\061" +
    "\030\uffa2\035\uffa2\001\002\000\006\030\234\035\233\001" +
    "\002\000\012\003\060\011\061\030\uffa2\035\uffa2\001\002" +
    "\000\006\030\uffd5\035\uffd5\001\002\000\012\003\060\011" +
    "\061\030\uffa2\035\uffa2\001\002\000\012\003\060\011\061" +
    "\030\uffa2\035\uffa2\001\002\000\006\030\uffd4\035\uffd4\001" +
    "\002\000\006\030\uffd2\035\uffd2\001\002\000\006\030\uffd0" +
    "\035\uffd0\001\002\000\016\050\226\052\222\055\227\056" +
    "\221\057\220\060\224\001\002\000\004\026\235\001\002" +
    "\000\004\030\uffd7\001\002\000\006\030\uffd6\035\uffd6\001" +
    "\002\000\006\030\uffcf\035\uffcf\001\002\000\006\030\uffd3" +
    "\035\uffd3\001\002\000\006\030\uffd1\035\uffd1\001\002\000" +
    "\004\013\uffdd\001\002\000\010\003\244\013\uffc2\027\245" +
    "\001\002\000\004\013\uffc3\001\002\000\010\003\251\030" +
    "\uffbf\045\250\001\002\000\004\013\ufff3\001\002\000\004" +
    "\030\276\001\002\000\004\011\252\001\002\000\004\030" +
    "\uffc0\001\002\000\004\025\254\001\002\000\004\030\uffc1" +
    "\001\002\000\004\027\255\001\002\000\014\040\264\043" +
    "\256\044\260\051\263\052\262\001\002\000\012\003\060" +
    "\011\061\030\uffa2\035\uffa2\001\002\000\006\030\uffbc\035" +
    "\uffbc\001\002\000\012\003\060\011\061\030\uffa2\035\uffa2" +
    "\001\002\000\006\030\271\035\270\001\002\000\012\003" +
    "\060\011\061\030\uffa2\035\uffa2\001\002\000\012\003\060" +
    "\011\061\030\uffa2\035\uffa2\001\002\000\012\003\060\011" +
    "\061\030\uffa2\035\uffa2\001\002\000\006\030\uffba\035\uffba" +
    "\001\002\000\006\030\uffb8\035\uffb8\001\002\000\006\030" +
    "\uffb7\035\uffb7\001\002\000\014\040\264\043\256\044\260" +
    "\051\263\052\262\001\002\000\004\026\272\001\002\000" +
    "\004\030\uffbe\001\002\000\006\030\uffbd\035\uffbd\001\002" +
    "\000\006\030\uffb9\035\uffb9\001\002\000\006\030\uffbb\035" +
    "\uffbb\001\002\000\004\013\uffc4\001\002\000\004\031\302" +
    "\001\002\000\004\031\ufff7\001\002\000\004\031\304\001" +
    "\002\000\004\034\015\001\002\000\004\031\ufff8\001\002" +
    "\000\006\034\015\037\305\001\002\000\004\012\306\001" +
    "\002\000\010\002\ufff9\005\ufff9\031\ufff9\001\002\000\004" +
    "\002\001\001\002\000\010\002\ufffe\005\ufffe\031\ufffe\001" +
    "\002\000\004\010\312\001\002\000\004\004\313\001\002" +
    "\000\004\014\314\001\002\000\004\006\315\001\002\000" +
    "\010\002\ufffc\005\ufffc\031\ufffc\001\002\000\010\002\uffff" +
    "\005\007\031\013\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\314\000\014\005\004\006\007\007\011\044\010\046" +
    "\005\001\001\000\012\005\004\006\315\044\010\046\005" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\005\307\044\010\046\005\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\021\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\154\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\036\026\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\037\032\001\001\000\002\001\001\000\004\040\034" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\041\052" +
    "\042\050\001\001\000\004\043\116\001\001\000\004\043" +
    "\115\001\001\000\004\043\114\001\001\000\004\043\113" +
    "\001\001\000\004\043\112\001\001\000\004\043\111\001" +
    "\001\000\004\043\110\001\001\000\004\043\107\001\001" +
    "\000\002\001\001\000\004\043\061\001\001\000\002\001" +
    "\001\000\004\042\056\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\002" +
    "\064\003\067\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\003\103\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\077" +
    "\001\001\000\004\003\076\001\001\000\004\003\075\001" +
    "\001\000\004\003\074\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\101\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\004\105\001\001\000\004\003\106\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\121\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\125\001\001\000\004\026\130\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\027\133" +
    "\030\136\001\001\000\002\001\001\000\004\043\147\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\043\146" +
    "\001\001\000\004\043\145\001\001\000\004\043\144\001" +
    "\001\000\004\043\143\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\030\153\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\012\163" +
    "\001\001\000\002\001\001\000\004\013\164\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\014\170\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\015\173\016\174\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\043\176\001\001\000" +
    "\002\001\001\000\004\016\202\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\207\001\001\000\002\001\001\000\004\032\210" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\033\213\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\034\222\035\224\001" +
    "\001\000\004\043\240\001\001\000\004\043\237\001\001" +
    "\000\004\043\236\001\001\000\002\001\001\000\004\043" +
    "\231\001\001\000\002\001\001\000\004\043\230\001\001" +
    "\000\004\043\227\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\035\235\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\245\001\001\000\002\001\001\000\004\020" +
    "\246\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\252\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\022\260\023\256" +
    "\001\001\000\004\043\274\001\001\000\002\001\001\000" +
    "\004\043\273\001\001\000\002\001\001\000\004\043\266" +
    "\001\001\000\004\043\265\001\001\000\004\043\264\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\023\272\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\045\300\046\277\001\001\000" +
    "\002\001\001\000\004\046\302\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\005\307\044\010\046\005" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MyParseUser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MyParseUser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MyParseUser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




private ArrayList<ReportErrorInterpreter> listError = new ArrayList();
private ArrayList<DataAnalyzer> dataStack = new ArrayList();
private ArrayList<RequestAnalyzer> listRquest = new ArrayList();


	  public MyParseUser(LexemaByMyParesUser lexer) {
        super(lexer);
    }

    //erorr
    public void syntax_error(Symbol cur_token) {
        String nameTerminal = symbl_name_from_id(this.cur_token.sym);
        int numberTerminal = this.cur_token.sym;
        ///codigo para el objeto
        TypeIntreprete type = TypeIntreprete.SYNTACTIC;
        int line = cur_token.left+1;
        int columna = cur_token.right +1;
        String lexema = this.cur_token.value.toString();
        Token token = new Token(line, columna, lexema);
        System.out.println(token.toString());
        this.listError.add(new ReportErrorInterpreter(type, token, ReportingConstants.ERROR_SICTATICO));
    }

    //Returnar el listado de errores
    public ArrayList<ReportErrorInterpreter> getListError() {
        return this.listError;
    }

    //Returnar el listado de Rquest
    public ArrayList<RequestAnalyzer> getListRquest(){
      return this.listRquest;
    }

    /**
     * ***END CODE*******
     */


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$MyParseUser$actions {
  private final MyParseUser parser;

  /** Constructor */
  CUP$MyParseUser$actions(MyParseUser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$MyParseUser$do_action_part00000000(
    int                        CUP$MyParseUser$act_num,
    java_cup.runtime.lr_parser CUP$MyParseUser$parser,
    java.util.Stack            CUP$MyParseUser$stack,
    int                        CUP$MyParseUser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MyParseUser$result;

      /* select the action based on the action number */
      switch (CUP$MyParseUser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		RESULT = start_val;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$MyParseUser$parser.done_parsing();
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= bucle_inicio 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio",5, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= error bucle_inicio 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio",5, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // bucle_inicio ::= bucle_inicio inicio_xson 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("bucle_inicio",4, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // bucle_inicio ::= inicio_xson 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("bucle_inicio",4, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // inicio_xson ::= OPEN_VERSION XSON VERSION EQUAL STRING CLOSE_VERSION 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // inicio_xson ::= solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // inicio_xson ::= solicitudes 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // solicitudes ::= OPEN_REQUEST MAKE_REQUESTS CLOSE varios_solicitud OPEN_REQUEST FINAL_REQUESTS CLOSE 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitudes",34, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-6)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // varios_solicitud ::= varios_solicitud solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("varios_solicitud",35, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // varios_solicitud ::= solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("varios_solicitud",35, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // solicitud_unit ::= OPEN_REQUEST MAKE_REQUEST COLNO solicitud cerrar_solicitud 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_unit",36, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-4)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // cerrar_solicitud ::= OPEN FINAL_REQUEST CLOSE_REQUEST 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("cerrar_solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // solicitud ::= NEW_USER CLOSE json_new_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.NEW_USER));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // solicitud ::= MODIFICAR_USUARIO CLOSE json_modificar_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.MODIFICAR_USUARIO));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // solicitud ::= ELIMINAR_USUARIO CLOSE json_del_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.ELIMINAR_USUARIO));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // solicitud ::= NEW_TRIVIA CLOSE json_new_trivia 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.NEW_TRIVIA));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // solicitud ::= AGREGAR_COMPONENTE CLOSE json_add_component 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.AGREGAR_COMPONENTE));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // json_add_component ::= KEYS_O obj_json_add_component KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // json_add_component ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // json_add_component ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // obj_json_add_component ::= PARAMETROS_COMPONENTE solicitud_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // obj_json_add_component ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // obj_json_add_component ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // solicitud_add_component ::= COLNO BRACKETS_O KEYS_O datas_add_component KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_add_component",30, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // datas_add_component ::= datas_add_component COMA data_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_add_component",31, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // datas_add_component ::= data_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_add_component",31, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // data_add_component ::= ID data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.ID_TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // data_add_component ::= TRIVIA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // data_add_component ::= CLASE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.CLASE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // data_add_component ::= TEXTO_VISIBLE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TEXTO_VISIBLE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // data_add_component ::= RESPUESTA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.RESPUESTA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // data_add_component ::= INDICE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INDICE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // data_add_component ::= OPCIONES data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.OPCIONES,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // data_add_component ::= FILAS data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.FILAS,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // data_add_component ::= COLUMNAS data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.COLUMNAS,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // json_new_trivia ::= KEYS_O obj_json_new_trivia KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // json_new_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // json_new_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // obj_json_new_trivia ::= PARAMETROS_TRIVIA solicitud_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // obj_json_new_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // obj_json_new_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // solicitud_new_trivia ::= COLNO BRACKETS_O KEYS_O datas_new_trivia KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_new_trivia",25, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // datas_new_trivia ::= datas_new_trivia COMA data_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_trivia",26, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // datas_new_trivia ::= data_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_trivia",26, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // data_new_trivia ::= ID_TRIVIA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.ID_TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // data_new_trivia ::= TIEMPO_PREGUNTA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TIEMPO_PREGUNTA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // data_new_trivia ::= NAME_PERSONAL_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NAME,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // data_new_trivia ::= TEMA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TEMA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // data_new_trivia ::= USUARIO_CREACION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO_CREACION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // data_new_trivia ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // json_del_user ::= KEYS_O obj_json_del_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",8, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // json_del_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",8, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // json_del_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",8, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // obj_json_del_user ::= USER_DATA solicitud_usuario_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // obj_json_del_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // obj_json_del_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // solicitud_usuario_del_user ::= COLNO BRACKETS_O KEYS_O datas_del_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_del_user",10, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // datas_del_user ::= datas_del_user COMA data_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_del_user",11, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // datas_del_user ::= data_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_del_user",11, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // data_del_user ::= NAME_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_del_user",12, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // json_modificar_user ::= KEYS_O obj_json_modificar_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",13, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // json_modificar_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",13, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // json_modificar_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",13, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // obj_json_modificar_user ::= USER_DATA solicitud_usuario_modificar_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // obj_json_modificar_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // obj_json_modificar_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // solicitud_usuario_modificar_user ::= COLNO BRACKETS_O KEYS_O datas_user_modificar_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_modificar_user",15, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // datas_user_modificar_user ::= datas_user_modificar_user COMA datas_user_modificar 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar_user",16, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // datas_user_modificar_user ::= datas_user_modificar 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar_user",16, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // datas_user_modificar ::= USUARIO_ANTIGUO data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO_ANTIGUO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // datas_user_modificar ::= NEW_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // datas_user_modificar ::= NUEVO_PASSWORD data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NUEVO_PASSWORD,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // datas_user_modificar ::= INSTITUCION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INSTITUTION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // datas_user_modificar ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // json_new_user ::= KEYS_O obj_json_new_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // json_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // json_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // obj_json_new_user ::= USER_DATA solicitud_usuario_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // obj_json_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // obj_json_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // solicitud_usuario_new_user ::= COLNO BRACKETS_O KEYS_O datas_new_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_new_user",20, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // datas_new_user ::= datas_new_user COMA data_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_user",21, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // datas_new_user ::= data_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_user",21, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // data_new_user ::= NAME_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // data_new_user ::= PASS_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.PASSWORD,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // data_new_user ::= NAME_PERSONAL_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NAME,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // data_new_user ::= INSTITUCION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INSTITUTION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // data_new_user ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // data_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // data_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // data ::= COLNO STRING 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // data ::= COLNO inico_opereacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // data ::= COLNO STRING_DATE 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // data ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // data ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // inico_opereacion ::= operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    //////////////////////////////////////////
		Double aDouble = 0.0;
    if (a!=null) {
        aDouble =   Double.valueOf(a.toString());
        RESULT = aDouble;
    }else{
      RESULT = aDouble;
    }
    //////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inico_opereacion",0, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // operacion ::= operacion SUMAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double resultDouble = aDouble + bDouble;
      RESULT = resultDouble;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // operacion ::= operacion RESTAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double resultDouble = aDouble - bDouble;
      RESULT = resultDouble;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // operacion ::= operacion DIVIDIR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      if (bDouble>0) {
        Double result = ( bDouble/ bDouble);
        RESULT = result;
      }else{
        /// manejar un error de sintasis
        RESULT = aDouble;// si es 15/0
      }
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // operacion ::= operacion MULTIPLICAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // operacion ::= PARENTESIS_A operacion parente 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = a;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // operacion ::= REAL_NUMEBERS 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // operacion ::= REAL_NUMEBERS PARENTESIS_A operacion PARENTESIS_C 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = a;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // parente ::= PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("parente",2, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // parente ::= PARENTESIS_C operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("parente",2, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MyParseUser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$MyParseUser$do_action(
    int                        CUP$MyParseUser$act_num,
    java_cup.runtime.lr_parser CUP$MyParseUser$parser,
    java.util.Stack            CUP$MyParseUser$stack,
    int                        CUP$MyParseUser$top)
    throws java.lang.Exception
    {
              return CUP$MyParseUser$do_action_part00000000(
                               CUP$MyParseUser$act_num,
                               CUP$MyParseUser$parser,
                               CUP$MyParseUser$stack,
                               CUP$MyParseUser$top);
    }
}

}
