
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package LexicalAndSyntacticAnalyzer.jflexandcupManagerUser;

import java_cup.runtime.*;
import java.util.ArrayList;
import LexicalAndSyntacticAnalyzer.analyzer.Token;
import reports.*;
import LexicalAndSyntacticAnalyzer.dataAnalyzer.*;
import LexicalAndSyntacticAnalyzer.dataAnalyzer.RequestAnalyzer;
import LexicalAndSyntacticAnalyzer.ListRequests;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class MyParseUser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return MySymUser.class;
}

  /** Default constructor. */
  @Deprecated
  public MyParseUser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public MyParseUser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public MyParseUser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\172\000\002\002\004\000\002\007\003\000\002\007" +
    "\004\000\002\006\004\000\002\006\003\000\002\005\010" +
    "\000\002\005\003\000\002\005\003\000\002\010\003\000" +
    "\002\010\003\000\002\052\011\000\002\053\004\000\002" +
    "\053\003\000\002\054\007\000\002\012\005\000\002\011" +
    "\005\000\002\011\005\000\002\011\005\000\002\011\005" +
    "\000\002\011\005\000\002\011\005\000\002\011\005\000" +
    "\002\011\005\000\002\011\005\000\002\044\005\000\002" +
    "\044\003\000\002\044\002\000\002\045\004\000\002\045" +
    "\003\000\002\045\002\000\002\046\010\000\002\047\004" +
    "\000\002\037\005\000\002\037\003\000\002\037\002\000" +
    "\002\040\004\000\002\040\003\000\002\040\002\000\002" +
    "\041\010\000\002\042\005\000\002\042\003\000\002\043" +
    "\004\000\002\043\004\000\002\043\004\000\002\043\004" +
    "\000\002\043\004\000\002\043\004\000\002\043\004\000" +
    "\002\043\004\000\002\043\004\000\002\032\005\000\002" +
    "\032\003\000\002\032\002\000\002\033\004\000\002\033" +
    "\003\000\002\033\002\000\002\034\010\000\002\035\005" +
    "\000\002\035\003\000\002\036\004\000\002\036\004\000" +
    "\002\036\004\000\002\036\004\000\002\036\004\000\002" +
    "\036\004\000\002\051\004\000\002\013\005\000\002\013" +
    "\003\000\002\013\002\000\002\014\004\000\002\014\003" +
    "\000\002\014\002\000\002\015\010\000\002\016\005\000" +
    "\002\016\003\000\002\017\004\000\002\020\005\000\002" +
    "\020\003\000\002\020\002\000\002\021\004\000\002\021" +
    "\003\000\002\021\002\000\002\022\010\000\002\023\005" +
    "\000\002\023\003\000\002\024\004\000\002\024\004\000" +
    "\002\024\004\000\002\024\004\000\002\024\004\000\002" +
    "\025\005\000\002\025\003\000\002\025\002\000\002\026" +
    "\004\000\002\026\003\000\002\026\002\000\002\027\010" +
    "\000\002\030\005\000\002\030\003\000\002\031\004\000" +
    "\002\031\004\000\002\031\004\000\002\031\004\000\002" +
    "\031\004\000\002\031\003\000\002\031\002\000\002\050" +
    "\004\000\002\050\004\000\002\050\004\000\002\050\004" +
    "\000\002\050\003\000\002\050\002\000\002\002\003\000" +
    "\002\003\005\000\002\003\005\000\002\003\005\000\002" +
    "\003\005\000\002\003\005\000\002\003\003\000\002\003" +
    "\006\000\002\004\003\000\002\004\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\352\000\010\003\004\005\007\032\013\001\002\000" +
    "\006\005\007\032\013\001\002\000\010\002\ufffd\005\ufffd" +
    "\032\ufffd\001\002\000\010\002\ufffb\005\ufffb\032\ufffb\001" +
    "\002\000\006\007\346\064\345\001\002\000\010\002\000" +
    "\005\007\032\013\001\002\000\010\002\ufffa\005\ufffa\032" +
    "\ufffa\001\002\000\004\002\343\001\002\000\006\035\015" +
    "\037\014\001\002\000\004\012\333\001\002\000\004\011" +
    "\016\001\002\000\024\041\023\042\020\043\017\054\026" +
    "\062\025\076\022\077\021\100\030\101\024\001\002\000" +
    "\004\012\307\001\002\000\004\012\253\001\002\000\004" +
    "\012\251\001\002\000\004\012\247\001\002\000\004\012" +
    "\212\001\002\000\004\012\210\001\002\000\004\012\144" +
    "\001\002\000\004\012\106\001\002\000\004\013\103\001" +
    "\002\000\004\012\031\001\002\000\010\003\032\013\uffe7" +
    "\030\034\001\002\000\004\013\uffe8\001\002\000\004\013" +
    "\uffeb\001\002\000\010\003\035\031\uffe4\055\036\001\002" +
    "\000\004\031\uffe5\001\002\000\004\011\041\001\002\000" +
    "\004\031\040\001\002\000\004\013\uffe9\001\002\000\004" +
    "\026\043\001\002\000\004\031\uffe6\001\002\000\004\030" +
    "\044\001\002\000\004\056\046\001\002\000\004\031\100" +
    "\001\002\000\010\003\047\011\050\031\uff92\001\002\000" +
    "\006\031\uff93\036\uff93\001\002\000\014\014\053\015\054" +
    "\022\056\023\052\024\057\001\002\000\004\031\uffe2\001" +
    "\002\000\006\031\uff95\036\uff95\001\002\000\006\031\uff97" +
    "\036\uff97\001\002\000\006\031\uff94\036\uff94\001\002\000" +
    "\006\031\uff96\036\uff96\001\002\000\022\016\uff8b\017\uff8b" +
    "\020\uff8b\021\uff8b\024\075\025\uff8b\031\uff8b\036\uff8b\001" +
    "\002\000\006\022\056\024\057\001\002\000\016\016\063" +
    "\017\064\020\061\021\062\031\uff91\036\uff91\001\002\000" +
    "\006\022\056\024\057\001\002\000\006\022\056\024\057" +
    "\001\002\000\006\022\056\024\057\001\002\000\006\022" +
    "\056\024\057\001\002\000\020\016\uff8f\017\uff8f\020\061" +
    "\021\062\025\uff8f\031\uff8f\036\uff8f\001\002\000\020\016" +
    "\uff90\017\uff90\020\061\021\062\025\uff90\031\uff90\036\uff90" +
    "\001\002\000\020\016\uff8d\017\uff8d\020\uff8d\021\uff8d\025" +
    "\uff8d\031\uff8d\036\uff8d\001\002\000\020\016\uff8e\017\uff8e" +
    "\020\uff8e\021\uff8e\025\uff8e\031\uff8e\036\uff8e\001\002\000" +
    "\014\016\063\017\064\020\061\021\062\025\072\001\002" +
    "\000\024\016\uff89\017\uff89\020\uff89\021\uff89\022\056\024" +
    "\057\025\uff89\031\uff89\036\uff89\001\002\000\020\016\uff8c" +
    "\017\uff8c\020\uff8c\021\uff8c\025\uff8c\031\uff8c\036\uff8c\001" +
    "\002\000\020\016\uff88\017\uff88\020\uff88\021\uff88\025\uff88" +
    "\031\uff88\036\uff88\001\002\000\006\022\056\024\057\001" +
    "\002\000\014\016\063\017\064\020\061\021\062\025\077" +
    "\001\002\000\020\016\uff8a\017\uff8a\020\uff8a\021\uff8a\025" +
    "\uff8a\031\uff8a\036\uff8a\001\002\000\004\027\101\001\002" +
    "\000\004\031\uffe3\001\002\000\010\002\ufff4\005\ufff4\032" +
    "\ufff4\001\002\000\004\033\104\001\002\000\004\034\105" +
    "\001\002\000\010\002\ufff3\005\ufff3\032\ufff3\001\002\000" +
    "\010\003\107\013\uffcd\030\110\001\002\000\004\013\uffce" +
    "\001\002\000\010\003\113\031\uffca\055\114\001\002\000" +
    "\004\013\uffef\001\002\000\004\031\143\001\002\000\004" +
    "\031\uffcb\001\002\000\004\011\116\001\002\000\004\031" +
    "\uffcc\001\002\000\004\026\117\001\002\000\004\030\120" +
    "\001\002\000\016\051\127\053\123\056\130\057\122\060" +
    "\121\061\125\001\002\000\012\003\047\011\050\031\uff92" +
    "\036\uff92\001\002\000\012\003\047\011\050\031\uff92\036" +
    "\uff92\001\002\000\012\003\047\011\050\031\uff92\036\uff92" +
    "\001\002\000\006\031\135\036\134\001\002\000\012\003" +
    "\047\011\050\031\uff92\036\uff92\001\002\000\006\031\uffc7" +
    "\036\uffc7\001\002\000\012\003\047\011\050\031\uff92\036" +
    "\uff92\001\002\000\012\003\047\011\050\031\uff92\036\uff92" +
    "\001\002\000\006\031\uffc6\036\uffc6\001\002\000\006\031" +
    "\uffc4\036\uffc4\001\002\000\006\031\uffc2\036\uffc2\001\002" +
    "\000\016\051\127\053\123\056\130\057\122\060\121\061" +
    "\125\001\002\000\004\027\136\001\002\000\004\031\uffc9" +
    "\001\002\000\006\031\uffc8\036\uffc8\001\002\000\006\031" +
    "\uffc1\036\uffc1\001\002\000\006\031\uffc5\036\uffc5\001\002" +
    "\000\006\031\uffc3\036\uffc3\001\002\000\004\013\uffcf\001" +
    "\002\000\010\003\145\013\uffdf\030\147\001\002\000\004" +
    "\013\uffe0\001\002\000\004\013\uffee\001\002\000\010\003" +
    "\150\031\uffdc\063\151\001\002\000\004\031\uffdd\001\002" +
    "\000\004\011\155\001\002\000\004\031\153\001\002\000" +
    "\004\013\uffe1\001\002\000\004\031\uffde\001\002\000\004" +
    "\026\156\001\002\000\004\030\157\001\002\000\024\065" +
    "\170\066\160\067\167\070\166\071\163\072\165\073\162" +
    "\074\164\075\161\001\002\000\012\003\047\011\050\031" +
    "\uff92\036\uff92\001\002\000\012\003\047\011\050\031\uff92" +
    "\036\uff92\001\002\000\012\003\047\011\050\031\uff92\036" +
    "\uff92\001\002\000\012\003\047\011\050\031\uff92\036\uff92" +
    "\001\002\000\012\003\047\011\050\031\uff92\036\uff92\001" +
    "\002\000\012\003\047\011\050\031\uff92\036\uff92\001\002" +
    "\000\012\003\047\011\050\031\uff92\036\uff92\001\002\000" +
    "\012\003\047\011\050\031\uff92\036\uff92\001\002\000\012" +
    "\003\047\011\050\031\uff92\036\uff92\001\002\000\006\031" +
    "\uffd9\036\uffd9\001\002\000\006\031\174\036\173\001\002" +
    "\000\024\065\170\066\160\067\167\070\166\071\163\072" +
    "\165\073\162\074\164\075\161\001\002\000\004\027\175" +
    "\001\002\000\004\031\uffdb\001\002\000\006\031\uffda\036" +
    "\uffda\001\002\000\006\031\uffd8\036\uffd8\001\002\000\006" +
    "\031\uffd6\036\uffd6\001\002\000\006\031\uffd5\036\uffd5\001" +
    "\002\000\006\031\uffd3\036\uffd3\001\002\000\006\031\uffd0" +
    "\036\uffd0\001\002\000\006\031\uffd4\036\uffd4\001\002\000" +
    "\006\031\uffd2\036\uffd2\001\002\000\006\031\uffd1\036\uffd1" +
    "\001\002\000\006\031\uffd7\036\uffd7\001\002\000\010\003" +
    "\145\013\uffdf\030\147\001\002\000\004\013\uffea\001\002" +
    "\000\010\003\213\013\uffa5\030\215\001\002\000\004\013" +
    "\uffa6\001\002\000\004\013\ufff2\001\002\000\010\003\217" +
    "\031\uffa2\046\216\001\002\000\004\011\222\001\002\000" +
    "\004\031\uffa3\001\002\000\004\031\221\001\002\000\004" +
    "\013\uffa7\001\002\000\004\026\224\001\002\000\004\031" +
    "\uffa4\001\002\000\004\030\225\001\002\000\022\003\230" +
    "\031\uff98\036\uff98\047\235\050\227\051\234\052\233\053" +
    "\232\001\002\000\006\031\244\036\243\001\002\000\012" +
    "\003\047\011\050\031\uff92\036\uff92\001\002\000\006\031" +
    "\uff99\036\uff99\001\002\000\006\031\uff9f\036\uff9f\001\002" +
    "\000\012\003\047\011\050\031\uff92\036\uff92\001\002\000" +
    "\012\003\047\011\050\031\uff92\036\uff92\001\002\000\012" +
    "\003\047\011\050\031\uff92\036\uff92\001\002\000\012\003" +
    "\047\011\050\031\uff92\036\uff92\001\002\000\006\031\uff9e" +
    "\036\uff9e\001\002\000\006\031\uff9c\036\uff9c\001\002\000" +
    "\006\031\uff9b\036\uff9b\001\002\000\006\031\uff9a\036\uff9a" +
    "\001\002\000\006\031\uff9d\036\uff9d\001\002\000\022\003" +
    "\230\031\uff98\036\uff98\047\235\050\227\051\234\052\233" +
    "\053\232\001\002\000\004\027\245\001\002\000\004\031" +
    "\uffa1\001\002\000\006\031\uffa0\036\uffa0\001\002\000\010" +
    "\003\107\013\uffcd\030\110\001\002\000\004\013\uffed\001" +
    "\002\000\010\003\145\013\uffdf\030\147\001\002\000\004" +
    "\013\uffec\001\002\000\010\003\254\013\uffb3\030\255\001" +
    "\002\000\004\013\uffb4\001\002\000\010\003\261\031\uffb0" +
    "\046\260\001\002\000\004\013\ufff1\001\002\000\004\031" +
    "\306\001\002\000\004\011\262\001\002\000\004\031\uffb1" +
    "\001\002\000\004\026\264\001\002\000\004\031\uffb2\001" +
    "\002\000\004\030\265\001\002\000\014\041\274\044\266" +
    "\045\270\052\273\053\272\001\002\000\012\003\047\011" +
    "\050\031\uff92\036\uff92\001\002\000\006\031\uffad\036\uffad" +
    "\001\002\000\012\003\047\011\050\031\uff92\036\uff92\001" +
    "\002\000\006\031\301\036\300\001\002\000\012\003\047" +
    "\011\050\031\uff92\036\uff92\001\002\000\012\003\047\011" +
    "\050\031\uff92\036\uff92\001\002\000\012\003\047\011\050" +
    "\031\uff92\036\uff92\001\002\000\006\031\uffab\036\uffab\001" +
    "\002\000\006\031\uffa9\036\uffa9\001\002\000\006\031\uffa8" +
    "\036\uffa8\001\002\000\014\041\274\044\266\045\270\052" +
    "\273\053\272\001\002\000\004\027\302\001\002\000\004" +
    "\031\uffaf\001\002\000\006\031\uffae\036\uffae\001\002\000" +
    "\006\031\uffaa\036\uffaa\001\002\000\006\031\uffac\036\uffac" +
    "\001\002\000\004\013\uffb5\001\002\000\010\003\310\013" +
    "\uffbd\030\311\001\002\000\004\013\uffbe\001\002\000\010" +
    "\003\315\031\uffba\046\314\001\002\000\004\013\ufff0\001" +
    "\002\000\004\031\332\001\002\000\004\011\316\001\002" +
    "\000\004\031\uffbb\001\002\000\004\026\320\001\002\000" +
    "\004\031\uffbc\001\002\000\004\030\321\001\002\000\004" +
    "\047\324\001\002\000\006\031\327\036\326\001\002\000" +
    "\006\031\uffb7\036\uffb7\001\002\000\012\003\047\011\050" +
    "\031\uff92\036\uff92\001\002\000\006\031\uffb6\036\uffb6\001" +
    "\002\000\004\047\324\001\002\000\004\027\330\001\002" +
    "\000\004\031\uffb9\001\002\000\006\031\uffb8\036\uffb8\001" +
    "\002\000\004\013\uffbf\001\002\000\004\032\336\001\002" +
    "\000\004\032\ufff5\001\002\000\004\032\340\001\002\000" +
    "\004\035\015\001\002\000\004\032\ufff6\001\002\000\006" +
    "\035\015\040\341\001\002\000\004\012\342\001\002\000" +
    "\010\002\ufff7\005\ufff7\032\ufff7\001\002\000\004\002\001" +
    "\001\002\000\010\002\ufffe\005\ufffe\032\ufffe\001\002\000" +
    "\004\010\ufff8\001\002\000\004\010\ufff9\001\002\000\004" +
    "\010\350\001\002\000\004\004\351\001\002\000\004\014" +
    "\352\001\002\000\004\006\353\001\002\000\010\002\ufffc" +
    "\005\ufffc\032\ufffc\001\002\000\010\002\uffff\005\007\032" +
    "\013\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\352\000\014\005\004\006\007\007\011\052\010\054" +
    "\005\001\001\000\012\005\004\006\353\052\010\054\005" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\346\001\001\000\010\005\343\052\010\054\005\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\026\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\012\101\001\001\000" +
    "\002\001\001\000\004\044\032\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\045\036\001\001\000\002\001" +
    "\001\000\004\046\041\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\047\044\001\001\000\002\001\001\000\004" +
    "\050\050\001\001\000\002\001\001\000\006\002\054\003" +
    "\057\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\070\001\001\000\002\001\001\000\004" +
    "\003\067\001\001\000\004\003\066\001\001\000\004\003" +
    "\065\001\001\000\004\003\064\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\072\001\001\000\004\003\073\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\075\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\032\110\001\001\000\002" +
    "\001\001\000\004\033\111\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\034\114\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\035\123\036\125\001\001\000\004\050\141\001\001" +
    "\000\004\050\140\001\001\000\004\050\137\001\001\000" +
    "\002\001\001\000\004\050\132\001\001\000\002\001\001" +
    "\000\004\050\131\001\001\000\004\050\130\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\036\136\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\037\145\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\040\151\001\001" +
    "\000\002\001\001\000\004\041\153\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\042\171\043\170\001\001\000" +
    "\004\050\206\001\001\000\004\050\205\001\001\000\004" +
    "\050\204\001\001\000\004\050\203\001\001\000\004\050" +
    "\202\001\001\000\004\050\201\001\001\000\004\050\200" +
    "\001\001\000\004\050\177\001\001\000\004\050\176\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\043\175" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\037\210\001\001\000\002\001\001\000\004\025\213\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\026\217" +
    "\001\001\000\004\027\222\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\030\225\031\230\001" +
    "\001\000\002\001\001\000\004\050\241\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\050\240\001\001\000" +
    "\004\050\237\001\001\000\004\050\236\001\001\000\004" +
    "\050\235\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\031\245\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\032\247\001\001\000\002\001\001" +
    "\000\004\037\251\001\001\000\002\001\001\000\004\020" +
    "\255\001\001\000\002\001\001\000\004\021\256\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\262\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\023\270\024\266\001\001\000" +
    "\004\050\304\001\001\000\002\001\001\000\004\050\303" +
    "\001\001\000\002\001\001\000\004\050\276\001\001\000" +
    "\004\050\275\001\001\000\004\050\274\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\024" +
    "\302\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\013\311\001\001\000\002\001\001\000\004" +
    "\014\312\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\015\316\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\016\321\017" +
    "\322\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\050\324\001\001\000\002\001\001\000\004\017\330\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\053\334\054\333\001\001\000" +
    "\002\001\001\000\004\054\336\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\005\343\052\010\054\005\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MyParseUser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MyParseUser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MyParseUser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




private ArrayList<ReportErrorInterpreter> listError = new ArrayList();
private ArrayList<DataAnalyzer> dataStack = new ArrayList();
private ArrayList<RequestAnalyzer> listRquest = new ArrayList();


	  public MyParseUser(LexemaByMyParesUser lexer) {
        super(lexer);
    }

    //erorr
    public void syntax_error(Symbol cur_token) {
        String nameTerminal = symbl_name_from_id(this.cur_token.sym);
        int numberTerminal = this.cur_token.sym;
        ///codigo para el objeto
        TypeIntreprete type = TypeIntreprete.SYNTACTIC;
        int line = cur_token.left+1;
        int columna = cur_token.right +1;
        String lexema = (this.cur_token.value!=null)? this.cur_token.value.toString() : "Token no existe";
        Token token = new Token(line, columna, lexema);
        this.listError.add(new ReportErrorInterpreter(type, token, (new InterpretSyntaticError(this.stack)).descriptionParser(this)));
    }

    //Returnar el listado de errores
    public ArrayList<ReportErrorInterpreter> getListError() {
        return this.listError;
    }

    //Returnar el listado de Rquest
    public ArrayList<RequestAnalyzer> getListRquest(){
      return this.listRquest;
    }

    /**
     * ***END CODE*******
     */


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$MyParseUser$actions {
  private final MyParseUser parser;

  /** Constructor */
  CUP$MyParseUser$actions(MyParseUser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$MyParseUser$do_action_part00000000(
    int                        CUP$MyParseUser$act_num,
    java_cup.runtime.lr_parser CUP$MyParseUser$parser,
    java.util.Stack            CUP$MyParseUser$stack,
    int                        CUP$MyParseUser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MyParseUser$result;

      /* select the action based on the action number */
      switch (CUP$MyParseUser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		RESULT = start_val;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$MyParseUser$parser.done_parsing();
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= bucle_inicio 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio",5, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= error bucle_inicio 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio",5, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // bucle_inicio ::= bucle_inicio inicio_xson 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("bucle_inicio",4, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // bucle_inicio ::= inicio_xson 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("bucle_inicio",4, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // inicio_xson ::= OPEN_VERSION xson_xml VERSION EQUAL STRING CLOSE_VERSION 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // inicio_xson ::= solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // inicio_xson ::= solicitudes 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inicio_xson",3, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // xson_xml ::= XSON 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("xson_xml",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // xson_xml ::= XML 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("xson_xml",6, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // solicitudes ::= OPEN_REQUEST MAKE_REQUESTS CLOSE varios_solicitud OPEN_REQUEST FINAL_REQUESTS CLOSE 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitudes",40, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-6)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // varios_solicitud ::= varios_solicitud solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("varios_solicitud",41, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // varios_solicitud ::= solicitud_unit 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("varios_solicitud",41, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // solicitud_unit ::= OPEN_REQUEST MAKE_REQUEST COLNO solicitud cerrar_solicitud 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_unit",42, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-4)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // cerrar_solicitud ::= OPEN FINAL_REQUEST CLOSE_REQUEST 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("cerrar_solicitud",8, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // solicitud ::= NEW_USER CLOSE json_new_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.NEW_USER));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // solicitud ::= MODIFICAR_USUARIO CLOSE json_modificar_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.MODIFICAR_USUARIO));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // solicitud ::= ELIMINAR_USUARIO CLOSE json_del_user 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.ELIMINAR_USUARIO));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // solicitud ::= NEW_TRIVIA CLOSE json_new_trivia 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.NEW_TRIVIA));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // solicitud ::= AGREGAR_COMPONENTE CLOSE json_add_component 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.AGREGAR_COMPONENTE));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // solicitud ::= MODIFICAR_TRIVIA CLOSE json_new_trivia 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.MODIFICAR_TRIVIA));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // solicitud ::= ELIMINAR_COMPONENTE CLOSE json_add_component 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.ELIMINAR_COMPONENTE));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // solicitud ::= ELIMINAR_TRIVIA CLOSE json_del_trivia 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.ELIMINAR_TRIVIA));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // solicitud ::= MODIFICAR_COMPONENTE CLOSE json_add_component 
            {
              Object RESULT =null;
		
    listRquest.add(new RequestAnalyzer(dataStack, ListRequests.MODIFICAR_COMPONENTE));
    dataStack = new ArrayList();
  
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud",7, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // json_del_trivia ::= KEYS_O obj_json_del_trivia KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_trivia",34, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // json_del_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_trivia",34, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // json_del_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_trivia",34, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // obj_json_del_trivia ::= PARAMETROS_TRIVIA solicitud_del_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_trivia",35, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // obj_json_del_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_trivia",35, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // obj_json_del_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_trivia",35, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // solicitud_del_trivia ::= COLNO BRACKETS_O KEYS_O datas_del_trivia KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_del_trivia",36, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // datas_del_trivia ::= ID_TRIVIA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.ID_TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_del_trivia",37, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // json_add_component ::= KEYS_O obj_json_add_component KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // json_add_component ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // json_add_component ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_add_component",29, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // obj_json_add_component ::= PARAMETROS_COMPONENTE solicitud_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",30, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // obj_json_add_component ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",30, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // obj_json_add_component ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_add_component",30, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // solicitud_add_component ::= COLNO BRACKETS_O KEYS_O datas_add_component KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_add_component",31, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // datas_add_component ::= datas_add_component COMA data_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // datas_add_component ::= data_add_component 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_add_component",32, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // data_add_component ::= ID data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.ID,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // data_add_component ::= TRIVIA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // data_add_component ::= CLASE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.CLASE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // data_add_component ::= TEXTO_VISIBLE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TEXTO_VISIBLE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // data_add_component ::= RESPUESTA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.RESPUESTA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // data_add_component ::= INDICE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INDICE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // data_add_component ::= OPCIONES data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.OPCIONES,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // data_add_component ::= FILAS data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.FILAS,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // data_add_component ::= COLUMNAS data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.COLUMNAS,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_add_component",33, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // json_new_trivia ::= KEYS_O obj_json_new_trivia KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // json_new_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // json_new_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_trivia",24, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // obj_json_new_trivia ::= PARAMETROS_TRIVIA solicitud_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",25, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // obj_json_new_trivia ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",25, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // obj_json_new_trivia ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_trivia",25, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // solicitud_new_trivia ::= COLNO BRACKETS_O KEYS_O datas_new_trivia KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_new_trivia",26, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // datas_new_trivia ::= datas_new_trivia COMA data_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // datas_new_trivia ::= data_new_trivia 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_trivia",27, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // data_new_trivia ::= ID_TRIVIA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.ID_TRIVIA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // data_new_trivia ::= TIEMPO_PREGUNTA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TIEMPO_PREGUNTA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // data_new_trivia ::= NAME_PERSONAL_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NAME,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // data_new_trivia ::= TEMA data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.TEMA,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // data_new_trivia ::= USUARIO_CREACION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO_CREACION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // data_new_trivia ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_trivia",28, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // especial ::= COLNO ID_TRIVIA_SPECIAL 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("especial",39, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // json_del_user ::= KEYS_O obj_json_del_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // json_del_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // json_del_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_del_user",9, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // obj_json_del_user ::= USER_DATA solicitud_usuario_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",10, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // obj_json_del_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",10, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // obj_json_del_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_del_user",10, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // solicitud_usuario_del_user ::= COLNO BRACKETS_O KEYS_O datas_del_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_del_user",11, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // datas_del_user ::= datas_del_user COMA data_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_del_user",12, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // datas_del_user ::= data_del_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_del_user",12, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // data_del_user ::= NAME_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_del_user",13, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // json_modificar_user ::= KEYS_O obj_json_modificar_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // json_modificar_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // json_modificar_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_modificar_user",14, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // obj_json_modificar_user ::= USER_DATA solicitud_usuario_modificar_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",15, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // obj_json_modificar_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",15, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // obj_json_modificar_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_modificar_user",15, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // solicitud_usuario_modificar_user ::= COLNO BRACKETS_O KEYS_O datas_user_modificar_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_modificar_user",16, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // datas_user_modificar_user ::= datas_user_modificar_user COMA datas_user_modificar 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar_user",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // datas_user_modificar_user ::= datas_user_modificar 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar_user",17, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // datas_user_modificar ::= USUARIO_ANTIGUO data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO_ANTIGUO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // datas_user_modificar ::= NEW_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // datas_user_modificar ::= NUEVO_PASSWORD data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NUEVO_PASSWORD,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // datas_user_modificar ::= INSTITUCION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INSTITUTION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // datas_user_modificar ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_user_modificar",18, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // json_new_user ::= KEYS_O obj_json_new_user KEYS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // json_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // json_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("json_new_user",19, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // obj_json_new_user ::= USER_DATA solicitud_usuario_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",20, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // obj_json_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",20, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // obj_json_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("obj_json_new_user",20, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // solicitud_usuario_new_user ::= COLNO BRACKETS_O KEYS_O datas_new_user KEYS_C BRACKETS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("solicitud_usuario_new_user",21, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-5)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // datas_new_user ::= datas_new_user COMA data_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // datas_new_user ::= data_new_user 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("datas_new_user",22, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // data_new_user ::= NAME_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.USUARIO,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // data_new_user ::= PASS_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.PASSWORD,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // data_new_user ::= NAME_PERSONAL_USER data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.NAME,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // data_new_user ::= INSTITUCION data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.INSTITUTION,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // data_new_user ::= DATE data 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		if(a!=null)dataStack.add(new DataAnalyzer(new Token(cur_token.left+1,cur_token.right +1,a.toString()),ListTypeData.DATE,a.toString()));
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // data_new_user ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // data_new_user ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data_new_user",23, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // data ::= COLNO STRING 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",38, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // data ::= COLNO inico_opereacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",38, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // data ::= COLNO STRING_DATE 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",38, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // data ::= COLNO ID_TRIVIA_SPECIAL 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",38, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // data ::= error 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",38, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // data ::= 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("data",38, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // inico_opereacion ::= operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    //////////////////////////////////////////
		Double aDouble = 0.0;
    if (a!=null) {
        aDouble =   Double.valueOf(a.toString());
        RESULT = aDouble;
    }else{
      RESULT = aDouble;
    }
    //////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("inico_opereacion",0, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // operacion ::= operacion SUMAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double resultDouble = aDouble + bDouble;
      RESULT = resultDouble;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // operacion ::= operacion RESTAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double resultDouble = aDouble - bDouble;
      RESULT = resultDouble;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // operacion ::= operacion DIVIDIR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      if (bDouble>0) {
        Double result = ( bDouble/ bDouble);
        RESULT = result;
      }else{
        /// manejar un error de sintasis
        RESULT = aDouble;// si es 15/0
      }
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // operacion ::= operacion MULTIPLICAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // operacion ::= PARENTESIS_A operacion parente 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = a;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // operacion ::= REAL_NUMEBERS 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // operacion ::= REAL_NUMEBERS PARENTESIS_A operacion PARENTESIS_C 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = a;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-3)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // parente ::= PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("parente",2, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // parente ::= PARENTESIS_C operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseUser$stack.peek()).value;
		RESULT = a;
              CUP$MyParseUser$result = parser.getSymbolFactory().newSymbol("parente",2, ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.elementAt(CUP$MyParseUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseUser$stack.peek()), RESULT);
            }
          return CUP$MyParseUser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MyParseUser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$MyParseUser$do_action(
    int                        CUP$MyParseUser$act_num,
    java_cup.runtime.lr_parser CUP$MyParseUser$parser,
    java.util.Stack            CUP$MyParseUser$stack,
    int                        CUP$MyParseUser$top)
    throws java.lang.Exception
    {
              return CUP$MyParseUser$do_action_part00000000(
                               CUP$MyParseUser$act_num,
                               CUP$MyParseUser$parser,
                               CUP$MyParseUser$stack,
                               CUP$MyParseUser$top);
    }
}

}
