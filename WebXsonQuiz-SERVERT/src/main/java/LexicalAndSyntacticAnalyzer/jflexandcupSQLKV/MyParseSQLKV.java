
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package LexicalAndSyntacticAnalyzer.jflexandcupSQLKV;

import java_cup.runtime.*;
import java.util.ArrayList;
import LexicalAndSyntacticAnalyzer.analyzer.Token;
import reports.*;
import LexicalAndSyntacticAnalyzer.dataAnalyzer.*;
import LexicalAndSyntacticAnalyzer.dataAnalyzer.RequestAnalyzer;
import LexicalAndSyntacticAnalyzer.ListRequests;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class MyParseSQLKV extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return MySymSQLKV.class;
}

  /** Default constructor. */
  @Deprecated
  public MyParseSQLKV() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public MyParseSQLKV(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public MyParseSQLKV(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\025\000\002\002\004\000\002\010\003\000\002\010" +
    "\004\000\002\010\003\000\002\005\011\000\002\006\004" +
    "\000\002\007\003\000\002\011\003\000\002\012\004\000" +
    "\002\012\004\000\002\012\004\000\002\002\003\000\002" +
    "\003\005\000\002\003\005\000\002\003\005\000\002\003" +
    "\005\000\002\003\005\000\002\003\003\000\002\003\006" +
    "\000\002\004\003\000\002\004\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\047\000\010\003\005\004\006\051\007\001\002\000" +
    "\004\002\ufffe\001\002\000\004\004\006\001\002\000\012" +
    "\010\025\016\030\017\024\020\027\001\002\000\004\052" +
    "\014\001\002\000\004\002\000\001\002\000\004\002\ufffa" +
    "\001\002\000\004\002\013\001\002\000\004\002\001\001" +
    "\002\000\004\011\016\001\002\000\004\053\020\001\002" +
    "\000\004\010\017\001\002\000\004\053\ufffc\001\002\000" +
    "\004\054\021\001\002\000\004\055\022\001\002\000\004" +
    "\007\023\001\002\000\004\002\ufffd\001\002\000\004\002" +
    "\ufff7\001\002\000\004\002\ufff9\001\002\000\004\002\ufff8" +
    "\001\002\000\006\016\030\020\027\001\002\000\020\002" +
    "\ufff0\012\ufff0\013\ufff0\014\ufff0\015\ufff0\020\042\021\ufff0" +
    "\001\002\000\014\002\ufff6\012\034\013\035\014\032\015" +
    "\033\001\002\000\006\016\030\020\027\001\002\000\006" +
    "\016\030\020\027\001\002\000\006\016\030\020\027\001" +
    "\002\000\006\016\030\020\027\001\002\000\016\002\ufff4" +
    "\012\ufff4\013\ufff4\014\032\015\033\021\ufff4\001\002\000" +
    "\016\002\ufff5\012\ufff5\013\ufff5\014\032\015\033\021\ufff5" +
    "\001\002\000\016\002\ufff2\012\ufff2\013\ufff2\014\ufff2\015" +
    "\ufff2\021\ufff2\001\002\000\016\002\ufff3\012\ufff3\013\ufff3" +
    "\014\ufff3\015\ufff3\021\ufff3\001\002\000\006\016\030\020" +
    "\027\001\002\000\014\012\034\013\035\014\032\015\033" +
    "\021\044\001\002\000\016\002\uffef\012\uffef\013\uffef\014" +
    "\uffef\015\uffef\021\uffef\001\002\000\014\012\034\013\035" +
    "\014\032\015\033\021\046\001\002\000\022\002\uffee\012" +
    "\uffee\013\uffee\014\uffee\015\uffee\016\030\020\027\021\uffee" +
    "\001\002\000\016\002\ufff1\012\ufff1\013\ufff1\014\ufff1\015" +
    "\ufff1\021\ufff1\001\002\000\016\002\uffed\012\uffed\013\uffed" +
    "\014\uffed\015\uffed\021\uffed\001\002\000\004\002\uffff\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\047\000\012\005\003\010\011\011\007\012\010\001" +
    "\001\000\002\001\001\000\006\011\050\012\010\001\001" +
    "\000\006\002\025\003\030\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\014\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\044" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\040\001\001\000\004\003\037\001\001\000\004\003\036" +
    "\001\001\000\004\003\035\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\042\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\046\001\001\000\004\003\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MyParseSQLKV$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MyParseSQLKV$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MyParseSQLKV$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




private ArrayList<ReportErrorInterpreter> listError = new ArrayList();
private ArrayList<DataAnalyzer> dataStack = new ArrayList();
private ArrayList<RequestAnalyzer> listRquest = new ArrayList();


	  public MyParseSQLKV(LexemaMySQLKV lexer) {
        super(lexer);
    }

    //erorr
    public void syntax_error(Symbol cur_token) {
        String nameTerminal = symbl_name_from_id(this.cur_token.sym);
        int numberTerminal = this.cur_token.sym;
        ///codigo para el objeto
        TypeIntreprete type = TypeIntreprete.SYNTACTIC;
        int line = cur_token.left+1;
        int columna = cur_token.right +1;
        String lexema = this.cur_token.value.toString();
        Token token = new Token(line, columna, lexema);
        System.out.println(token.toString());
        this.listError.add(new ReportErrorInterpreter(type, token, ReportingConstants.ERROR_SICTATICO));
    }

    //Returnar el listado de errores
    public ArrayList<ReportErrorInterpreter> getListError() {
        return this.listError;
    }

    //Returnar el listado de Rquest
    public ArrayList<RequestAnalyzer> getListRquest(){
      return this.listRquest;
    }

    /**
     * ***END CODE*******
     */


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$MyParseSQLKV$actions {
  private final MyParseSQLKV parser;

  /** Constructor */
  CUP$MyParseSQLKV$actions(MyParseSQLKV parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$MyParseSQLKV$do_action_part00000000(
    int                        CUP$MyParseSQLKV$act_num,
    java_cup.runtime.lr_parser CUP$MyParseSQLKV$parser,
    java.util.Stack            CUP$MyParseSQLKV$stack,
    int                        CUP$MyParseSQLKV$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MyParseSQLKV$result;

      /* select the action based on the action number */
      switch (CUP$MyParseSQLKV$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).value;
		RESULT = start_val;
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$MyParseSQLKV$parser.done_parsing();
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= bucle_inicio 
            {
              Object RESULT =null;

              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("inicio",6, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= error bucle_inicio 
            {
              Object RESULT =null;

              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("inicio",6, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // inicio ::= sql_kv 
            {
              Object RESULT =null;

              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("inicio",6, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // sql_kv ::= SELECCIONAR REPORTE id_trivia FILTRAR POR USUARIO EQUAL 
            {
              Object RESULT =null;

              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("sql_kv",3, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-6)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // id_trivia ::= ID_TRIVIA STRING 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		RESULT = a;
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("id_trivia",4, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // id_user ::= STRING 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		RESULT = a;
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("id_user",5, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // bucle_inicio ::= data 
            {
              Object RESULT =null;

              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("bucle_inicio",7, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // data ::= COLNO STRING 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		RESULT = a;
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("data",8, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // data ::= COLNO inico_opereacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		RESULT = a;
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("data",8, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // data ::= COLNO STRING_DATE 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		RESULT = a;
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("data",8, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // inico_opereacion ::= operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		
    //////////////////////////////////////////
		Double aDouble = 0.0;
    if (a!=null) {
        aDouble =   Double.valueOf(a.toString());
        RESULT = aDouble;
    }else{
      RESULT = aDouble;
    }
    //////////////////////////////////////////
    
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("inico_opereacion",0, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // operacion ::= operacion SUMAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double resultDouble = aDouble + bDouble;
      RESULT = resultDouble;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // operacion ::= operacion RESTAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double resultDouble = aDouble - bDouble;
      RESULT = resultDouble;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // operacion ::= operacion DIVIDIR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      if (bDouble>0) {
        Double result = ( bDouble/ bDouble);
        RESULT = result;
      }else{
        /// manejar un error de sintasis
        RESULT = aDouble;// si es 15/0
      }
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // operacion ::= operacion MULTIPLICAR operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = aDouble;
    }
    /////////////////////////////////////////////

    
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // operacion ::= PARENTESIS_A operacion parente 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = a;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-2)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // operacion ::= REAL_NUMEBERS 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		RESULT = a;
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // operacion ::= REAL_NUMEBERS PARENTESIS_A operacion PARENTESIS_C 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-3)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)).value;
		
    /////////////////////////////////////////////
    Double aDouble = 0.0;		
    Double bDouble = 0.0;
    if(a != null){
      aDouble =   Double.valueOf(a.toString());
    }
    if (b!=null) {
      bDouble =   Double.valueOf(b.toString());
    }
    if (b!=null & a != null ) {
      Double result = aDouble * bDouble;
      RESULT = result;
    }else{
      RESULT = a;
    }
    /////////////////////////////////////////////
    
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("operacion",1, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-3)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // parente ::= PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("parente",2, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // parente ::= PARENTESIS_C operacion 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$MyParseSQLKV$stack.peek()).value;
		RESULT = a;
              CUP$MyParseSQLKV$result = parser.getSymbolFactory().newSymbol("parente",2, ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.elementAt(CUP$MyParseSQLKV$top-1)), ((java_cup.runtime.Symbol)CUP$MyParseSQLKV$stack.peek()), RESULT);
            }
          return CUP$MyParseSQLKV$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MyParseSQLKV$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$MyParseSQLKV$do_action(
    int                        CUP$MyParseSQLKV$act_num,
    java_cup.runtime.lr_parser CUP$MyParseSQLKV$parser,
    java.util.Stack            CUP$MyParseSQLKV$stack,
    int                        CUP$MyParseSQLKV$top)
    throws java.lang.Exception
    {
              return CUP$MyParseSQLKV$do_action_part00000000(
                               CUP$MyParseSQLKV$act_num,
                               CUP$MyParseSQLKV$parser,
                               CUP$MyParseSQLKV$stack,
                               CUP$MyParseSQLKV$top);
    }
}

}
