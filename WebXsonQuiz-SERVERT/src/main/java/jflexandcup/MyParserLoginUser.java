
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package jflexandcup;

import java_cup.runtime.*;
import java.util.ArrayList;
import analyzer.Token;
import reports.ReportErrorInterpreter;
import reports.ReportingConstants;
import reports.TypeIntreprete;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class MyParserLoginUser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return MySymLoginUser.class;
}

  /** Default constructor. */
  @Deprecated
  public MyParserLoginUser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public MyParserLoginUser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public MyParserLoginUser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\004\000\002\002\004\000\002\005\003\000\002\005" +
    "\004\000\002\002\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\007\000\006\003\005\004\006\001\002\000\004\002" +
    "\000\001\002\000\004\004\006\001\002\000\004\002\ufffe" +
    "\001\002\000\004\002\010\001\002\000\004\002\001\001" +
    "\002\000\004\002\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\007\000\006\002\003\005\006\001\001\000\002\001" +
    "\001\000\004\002\010\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MyParserLoginUser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MyParserLoginUser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MyParserLoginUser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




private ArrayList<ReportErrorInterpreter> listError = new ArrayList();


	  public MyParserLoginUser(LexemaUser lexer) {
        super(lexer);
    }

    //erorr
    public void syntax_error(Symbol cur_token) {
        String nameTerminal = symbl_name_from_id(this.cur_token.sym);
        int numberTerminal = this.cur_token.sym;
        String lexema = this.cur_token.value.toString();
        int line = cur_token.left+1;
        int columna = cur_token.right +1;
        //System.err.println("Numero del teminal->"+this.cur_token.sym);
        ///codigo para el objeto
        TypeIntreprete type = TypeIntreprete.SYNTACTIC;
        Token token = new Token(line, columna, lexema);
        this.listError.add(new ReportErrorInterpreter(type, token, ReportingConstants.ERROR_SICTATICO));
    }

    //Returnar el listado de errores
    public ArrayList<ReportErrorInterpreter> getListError() {
        return this.listError;
    }

    /**
     * ***END CODE*******
     */


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$MyParserLoginUser$actions {
  private final MyParserLoginUser parser;

  /** Constructor */
  CUP$MyParserLoginUser$actions(MyParserLoginUser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$MyParserLoginUser$do_action_part00000000(
    int                        CUP$MyParserLoginUser$act_num,
    java_cup.runtime.lr_parser CUP$MyParserLoginUser$parser,
    java.util.Stack            CUP$MyParserLoginUser$stack,
    int                        CUP$MyParserLoginUser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MyParserLoginUser$result;

      /* select the action based on the action number */
      switch (CUP$MyParserLoginUser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.elementAt(CUP$MyParserLoginUser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.elementAt(CUP$MyParserLoginUser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MyParserLoginUser$stack.elementAt(CUP$MyParserLoginUser$top-1)).value;
		RESULT = start_val;
              CUP$MyParserLoginUser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.elementAt(CUP$MyParserLoginUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$MyParserLoginUser$parser.done_parsing();
          return CUP$MyParserLoginUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= inico_opereacion 
            {
              Object RESULT =null;

              CUP$MyParserLoginUser$result = parser.getSymbolFactory().newSymbol("inicio",3, ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.peek()), RESULT);
            }
          return CUP$MyParserLoginUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= error inico_opereacion 
            {
              Object RESULT =null;

              CUP$MyParserLoginUser$result = parser.getSymbolFactory().newSymbol("inicio",3, ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.elementAt(CUP$MyParserLoginUser$top-1)), ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.peek()), RESULT);
            }
          return CUP$MyParserLoginUser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // inico_opereacion ::= REAL_NUMEBERS 
            {
              Object RESULT =null;

              CUP$MyParserLoginUser$result = parser.getSymbolFactory().newSymbol("inico_opereacion",0, ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.peek()), ((java_cup.runtime.Symbol)CUP$MyParserLoginUser$stack.peek()), RESULT);
            }
          return CUP$MyParserLoginUser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MyParserLoginUser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$MyParserLoginUser$do_action(
    int                        CUP$MyParserLoginUser$act_num,
    java_cup.runtime.lr_parser CUP$MyParserLoginUser$parser,
    java.util.Stack            CUP$MyParserLoginUser$stack,
    int                        CUP$MyParserLoginUser$top)
    throws java.lang.Exception
    {
              return CUP$MyParserLoginUser$do_action_part00000000(
                               CUP$MyParserLoginUser$act_num,
                               CUP$MyParserLoginUser$parser,
                               CUP$MyParserLoginUser$stack,
                               CUP$MyParserLoginUser$top);
    }
}

}
